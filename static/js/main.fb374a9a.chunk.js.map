{"version":3,"sources":["Components/Edit/EditForm.jsx","Components/Contacts/Tr.js","Components/Add/AddForm.jsx","Components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["EditForm","contacts","setContacts","show","editObj","setEditObj","handleCloseEdit","useState","name","lastName","phone","email","errors","validEmailRegex","RegExp","validPhoneRegex","handleChange","event","target","value","length","test","Modal","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","map","item","id","trim","className","htmlFor","type","placeholder","onChange","Footer","Button","variant","onClick","Tr","setShow","handleEdit","trContact","filter","contact","AddForm","handleClose","newObj","setNewObj","obj","reduce","initial","Math","max","handleAdd","Table","action","search","setSearch","newTr","toLowerCase","startsWith","e","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb374a9a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\n\r\n\r\nfunction EditForm({ contacts, setContacts, show, editObj, setEditObj, handleCloseEdit }) {\r\n\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n\r\n    });\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setEditObj({ ...editObj, [name]: value });\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                errors.name =\r\n                    value.length < 3 ? \"Name must be 3 characters long!\" : \"\";\r\n                break;\r\n            case \"lastName\":\r\n                errors.lastName =\r\n                    value.length < 3 ? \"LastName must be 3 characters long!\" : \"\";\r\n                break;\r\n            case \"phone\":\r\n                errors.phone = validPhoneRegex.test(value) ? \"\" : \"phone must be Number!\";\r\n                break;\r\n            case \"email\":\r\n                errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setEditObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setContacts([...contacts.map((item) => {\r\n            if (item.id == editObj.id && (editObj.name.trim().length > 0 && editObj.lastName.trim().length > 0 && editObj.phone.trim().length > 0 && editObj.email.trim().length > 0)) {\r\n                item.name = editObj.name;\r\n                item.lastName = editObj.lastName;\r\n                item.phone = editObj.phone;\r\n                item.email = editObj.email;\r\n                return editObj;\r\n            } else return item;\r\n        })]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={editObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.name}</span>}\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={editObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.lastName}</span>}\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={editObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.phone}</span>}\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={editObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.email}</span>}\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={handleCloseEdit}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default EditForm;","import React, { useState } from 'react';\r\nimport EditForm from '../Edit/EditForm'\r\n\r\nfunction Tr({ contacts, setContacts, item }) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editObj, setEditObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    })\r\n    const handleDelete = (id) => {\r\n        setContacts([...contacts.filter(item => item.id != id)])\r\n    }\r\n\r\n    const handleCloseEdit = () => setShow(false);\r\n\r\n    const handleShowEdit = () => {\r\n        setShow(true);\r\n        handleEdit(item.id);\r\n    };\r\n    const handleEdit = (id) => {\r\n        const trContact = contacts.filter((contact) => contact.id == id);\r\n        setEditObj(trContact[0]);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <tr className=\"tr\">\r\n                <td>{item.id}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>{item.phone}</td>\r\n                <td>{item.email}</td>\r\n                <td>\r\n                    <button onClick={() => handleDelete(item.id)} className=\"btn btn-danger mx-1\"><i className='fa fa-trash' /></button>\r\n                    <button onClick={() => handleShowEdit(item.id)} className=\"btn btn-primary mx-1\"><i className='fa fa-edit' /></button>\r\n                    <EditForm\r\n                        contacts={contacts}\r\n                        setContacts={setContacts}\r\n                        show={show}\r\n                        handleCloseEdit={handleCloseEdit}\r\n                        editObj={editObj}\r\n                        setEditObj={setEditObj}\r\n                        />\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tr;","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\n\r\n\r\nfunction AddForm({ contacts, setContacts, show, handleClose }) {\r\n\r\n    const [newObj, setNewObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    })\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setNewObj({ ...newObj, [name]: value });\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                errors.name =\r\n                    value.length < 3 ? \"Name must be 3 characters long!\" : \"\";\r\n                break;\r\n            case \"lastName\":\r\n                errors.lastName =\r\n                    value.length < 3 ? \"LastName must be 3 characters long!\" : \"\";\r\n                break;\r\n            case \"phone\":\r\n                errors.phone = validPhoneRegex.test(value) ? \"\" : \"phone must be Number!\";\r\n                break;\r\n            case \"email\":\r\n                errors.email = validEmailRegex.test(value) ? \"\" : \"Email is not valid!\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleAdd = (obj) => {\r\n        let id = contacts.reduce((initial, item) => 1 + Math.max(item.id), 0);\r\n        (obj.name.trim().length > 0) && (obj.lastName.trim().length > 0) && (obj.phone.trim().length > 0) && (obj.email.trim().length > 0)\r\n            && setContacts([...contacts, { ...obj, id }]);\r\n    }\r\n    const handleClear = () => {\r\n        setNewObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        handleAdd(newObj);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={newObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.name}</span>}\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={newObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.lastName}</span>}\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={newObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.phone}</span>}\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={newObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.email}</span>}\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AddForm;","import React, { useState, useEffect } from 'react';\r\nimport Tr from '../Contacts/Tr';\r\nimport Editform from '../Add/AddForm';\r\nimport '../Table/table.css';\r\nimport AddForm from '../Add/AddForm';\r\n\r\nfunction Table() {\r\n\r\n    const [contacts, setContacts] = useState([\r\n        { id: 1, name: \"ali\", lastName: \"komijani\", phone: \"09014356218\", email: \"ali@gmail.com\", action: \"\" },\r\n        { id: 2, name: \"mohammad\", lastName: \"khorrami\", phone: \"09114356218\", email: \"mohammad@gmail.com\", action: \"\" },\r\n        { id: 3, name: \"reza\", lastName: \"hatami\", phone: \"09124356218\", email: \"reza@gmail.com\", action: \"\" },\r\n        { id: 4, name: \"mahdi\", lastName: \"sadeghi\", phone: \"09134356218\", email: \"sadeghi@gmail.com\", action: \"\" },\r\n        { id: 5, name: \"hasan\", lastName: \"mohammadi\", phone: \"09224356218\", email: \"hasan@gmail.com\", action: \"\" },\r\n        { id: 6, name: \"amir\", lastName: \"sharifi\", phone: \"09354356218\", email: \"sharifi@gmail.com\", action: \"\" },\r\n        { id: 7, name: \"amirali\", lastName: \"ansari\", phone: \"09356356218\", email: \"ansari@gmail.com\", action: \"\" },\r\n        { id: 8, name: \"mehran\", lastName: \"mansoori\", phone: \"09164356218\", email: \"mehran@gmail.com\", action: \"\" },\r\n\r\n    ]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const chengeHandler = (e) => {\r\n        setSearch(e.target.value)\r\n    }\r\n    let newTr = contacts.filter(item => (\r\n        item.name.toLowerCase().startsWith(search.toLowerCase()) ||\r\n        item.phone.startsWith(search)\r\n    ))\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tableContainer table-responsive\">\r\n                <div className=\"col-12 row justify-content-around pl-5\">\r\n                    <div className=\"col-10 col-md-8 col-lg-6 mx-auto row align-items-center justify-content-center bg-info rounded-lg py-2 my-2 ml-5\">\r\n                        <label className=\"mb-0 col-6 col-sm-8 col-lg-3\">search:</label>\r\n                        <input className=\"rounded border-0  col-12 col-sm-8 col-lg-6\" name={'search'} onChange={chengeHandler} value={search} placeholder=\"search contact\" />\r\n                        <button className=\"btn btn-light py-1 m-1 col-3 col-sm-2 col-lg-2\"><i className='fa fa-search' /></button>\r\n                    </div>\r\n                    <button className=\"btn btn-info my-3\" onClick={handleShow}><i className='fa fa-plus' /></button>\r\n                    <AddForm contacts={contacts} setContacts={setContacts} show={show} handleClose={handleClose} />\r\n                </div>\r\n                <div className=\"table-content\">\r\n                    <table className=\"table col-12 table-striped table-hover border\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>name</th>\r\n                                <th>last name</th>\r\n                                <th>phone</th>\r\n                                <th>email</th>\r\n                                <th>action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {newTr.map((item) => (\r\n                                <Tr key={item.id} item={item} contacts={contacts} setContacts={setContacts} />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './Components/Table/Table';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}