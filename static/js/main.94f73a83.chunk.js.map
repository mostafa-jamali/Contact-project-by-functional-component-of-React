{"version":3,"sources":["Components/Contacts/Tr.js","Components/Edit/Editform.js","Components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["Tr","props","className","item","id","name","lastName","phone","email","address","birthday","details","onClick","setContacts","contacts","filter","Editform","show","handleClose","setShow","handleShow","useState","newObj","setNewObj","handleChange","event","target","value","handleClear","Modal","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","obj","reduce","initial","Math","max","length","handleAdd","htmlFor","type","placeholder","onChange","Footer","Button","variant","Table","action","search","setSearch","newTr","toLowerCase","startsWith","e","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94f73a83.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Tr (props) {\r\n\r\n    const handleDelete= (id)=>{\r\n        props.setContacts([...props.contacts.filter(item=> item.id != id)])\r\n    }\r\n\r\n    return (\r\n            <>\r\n                <tr className=\"tr\">\r\n                    <td>{props.item.id}</td>\r\n                    <td>{props.item.name}</td>\r\n                    <td>{props.item.lastName}</td>\r\n                    <td>{props.item.phone}</td>\r\n                    <td>{props.item.email}</td>\r\n                    <td>{props.item.address}</td>\r\n                    <td>{props.item.birthday}</td>\r\n                    <td>{props.item.details}</td>\r\n                    <td>\r\n                        <button onClick={()=> handleDelete(props.item.id)} className=\"btn btn-danger mx-1\"><i className='fa fa-trash'/></button>\r\n                        <button className=\"btn btn-primary mx-1\"><i className='fa fa-edit'/></button>\r\n                    </td>\r\n                </tr>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Tr;","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\n\r\n\r\nfunction Editform({contacts, setContacts, show, setShow,handleShow, handleClose}) {\r\n\r\n    const [newObj, setNewObj] = useState({\r\n        id: \"\",\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        address: \"\",\r\n        birthday: \"\",\r\n        details: \"\",\r\n    })\r\n    const handleChange= (event)=> {\r\n        const {name, value} = event.target;\r\n        setNewObj({...newObj, [name]:value});\r\n    }\r\n    const handleAdd = (obj)=>{\r\n        let id = contacts.reduce((initial, item) =>  1 + Math.max(item.id), 0);\r\n        (obj.name.length > 0) && (obj.lastName.length > 0) && (obj.email.length > 0)\r\n        && setContacts([...contacts, {...obj, id}]);\r\n    }\r\n    const handleClear= ()=>{\r\n        setNewObj({\r\n            id: \"\",\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n            birthday: \"\",\r\n            details: \"\",\r\n        })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        handleAdd(newObj);\r\n        handleClear();\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add/Edit contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"address\" className=\"mb-0 mt-2\">address:</label>\r\n                        <input type=\"address\" placeholder=\"Enter address\" name=\"address\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"birthday\" className=\"mb-0 mt-2\">birthday:</label>\r\n                        <input type=\"number\" placeholder=\"Enter birthday\" name=\"birthday\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <label htmlFor=\"details\" className=\"mb-0 mt-2\">details:</label>\r\n                        <input type=\"text\" placeholder=\"Enter details\" name=\"details\" onChange={handleChange} className=\"rounded border\"/>\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Editform;","import React, { useState, useEffect } from 'react';\r\nimport Tr from '../Contacts/Tr';\r\nimport Editform from '../Edit/Editform';\r\nimport '../Table/table.css';\r\n\r\nfunction Table (props) {\r\n\r\n    const [contacts, setContacts] = useState([\r\n        {id:1, name:\"ali\", lastName:\"komijani\", phone:\"09014356218\", email:\"ali@gmail.com\", address:\"komijan\", birthday:\"1375\", details:\"-\", action:\"\"},\r\n        {id:2, name:\"mohammad\", lastName:\"khorrami\", phone:\"09114356218\", email:\"mohammad@gmail.com\", address:\"arak\", birthday:\"1346\", details:\"-\", action:\"\"},\r\n        {id:3, name:\"reza\", lastName:\"hatami\", phone:\"09124356218\", email:\"reza@gmail.com\", address:\"tehran\", birthday:\"1345\", details:\"-\", action:\"\"},\r\n        {id:4, name:\"mahdi\", lastName:\"sadeghi\", phone:\"09134356218\", email:\"sadeghi@gmail.com\", address:\"esfahan\", birthday:\"1388\", details:\"-\", action:\"\"},\r\n        {id:5, name:\"hasan\", lastName:\"mohammadi\", phone:\"09224356218\", email:\"hasan@gmail.com\", address:\"kerman\", birthday:\"1366\", details:\"-\", action:\"\"},\r\n        {id:6, name:\"amir\", lastName:\"sharifi\", phone:\"09354356218\", email:\"sharifi@gmail.com\", address:\"azna\", birthday:\"1359\", details:\"-\", action:\"\"},\r\n        {id:7, name:\"amirali\", lastName:\"ansari\", phone:\"09356356218\", email:\"ansari@gmail.com\", address:\"karaj\", birthday:\"1374\", details:\"-\", action:\"\"},\r\n        {id:8, name:\"mehran\", lastName:\"mansoori\", phone:\"09164356218\", email:\"mehran@gmail.com\", address:\"shiraz\", birthday:\"1375\", details:\"-\", action:\"\"},\r\n\r\n    ]);\r\n    const [search, setSearch]= useState(\"\");\r\n\r\n    const chengeHandler= (e)=>{\r\n        setSearch(e.target.value)\r\n    }\r\n    let newTr = contacts.filter(item=> (\r\n        item.name.toLowerCase().startsWith(search.toLowerCase()) ||\r\n        item.phone.startsWith(search)\r\n    ))\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true)\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"tableContainer\">\r\n                <div className=\"col-12 row justify-content-around pl-5\">\r\n                    <div className=\"col-6 row align-items-center justify-content-center bg-info rounded-lg py-2 my-2 ml-5\">\r\n                        <label className=\"mb-0\">search:</label>\r\n                        <input className=\"rounded border-0 mx-2 input\" name={'search'} onChange={chengeHandler} value={search} placeholder=\"       search contact\"/>\r\n                        <i className='fa fa-search'/>\r\n                    </div>\r\n                    <button className=\"btn btn-info my-3\" onClick={handleShow}><i className='fa fa-plus'/></button>\r\n                    <Editform contacts={contacts} setContacts={setContacts} show={show} setShow={setShow} handleShow={handleShow} handleClose={handleClose}/>\r\n                </div>\r\n                <table className=\"table table-responsive col-12 table-striped table-hover border\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>name</th>\r\n                            <th>last name</th>\r\n                            <th>phone</th>\r\n                            <th>email</th>\r\n                            <th>address</th>\r\n                            <th>birthday</th>\r\n                            <th>details</th>\r\n                            <th>action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {newTr.map((item) =>(\r\n                            <Tr key={item.id} item={item} contacts={contacts} setContacts={setContacts} handleShow={handleShow}/>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './Components/Table/Table';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}