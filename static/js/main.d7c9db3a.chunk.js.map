{"version":3,"sources":["Components/Add/AddForm.jsx","Components/Search/Search.jsx","Components/Edit/EditForm.jsx","Components/Contacts/Tr.js","Components/Table/Table.js","App.js","serviceWorker.js","index.js"],"names":["AddForm","contacts","setContacts","show","handleClose","useState","name","lastName","phone","email","newObj","setNewObj","add","setAdd","errors","validEmailRegex","RegExp","validPhoneRegex","handleChange","event","target","value","trim","length","test","handleClear","Modal","onHide","Header","closeButton","Title","Body","onSubmit","preventDefault","obj","id","reduce","initial","item","Math","max","handleAdd","className","htmlFor","type","placeholder","onChange","Footer","Button","variant","onClick","Search","search","chengeHandler","handleShow","style","color","EditForm","editObj","setEditObj","handleCloseEdit","errorsEdit","edit","setEdit","map","Tr","setShow","handleEdit","trContact","filter","contact","Table","action","setSearch","newTr","toLowerCase","startsWith","e","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7c9db3a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\n\r\n\r\nfunction AddForm({ contacts, setContacts, show, handleClose }) {\r\n\r\n    const [newObj, setNewObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    })\r\n    const [add, setAdd] = useState(true);\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setNewObj({ ...newObj, [name]: value });\r\n\r\n        setAdd(true);\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                if (value.trim().length < 1) {\r\n                    setAdd(false);\r\n                    errors.name = \"Name must be 1 characters (without space) long!\";\r\n                } else errors.name = \"\"\r\n                break;\r\n            case \"lastName\":\r\n                if (value.trim().length < 1) {\r\n                    setAdd(false);\r\n                    errors.lastName = \"Name must be 1 characters (without space) long!\";\r\n                } else errors.lastName = \"\"\r\n                break;\r\n            case \"phone\":\r\n                if (!validPhoneRegex.test(value)) {\r\n                    setAdd(false);\r\n                    errors.phone = \"Phone is not valid!\";\r\n                } else errors.phone = \"\"\r\n                break;\r\n            case \"email\":\r\n                if (!validEmailRegex.test(value)) {\r\n                    setAdd(false);\r\n                    errors.email = \"Email is not valid!\";\r\n                } else errors.email = \"\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleAdd = (obj) => {\r\n        let id = contacts.reduce((initial, item) => 1 + Math.max(item.id), 0);\r\n        setContacts([...contacts, { ...obj, id }]);\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setNewObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (add == true) {\r\n            if (newObj.name != \"\" && newObj.lastName != \"\" && newObj.phone != \"\" && newObj.email != \"\") {\r\n                handleAdd(newObj);\r\n                handleClose();\r\n                handleClear();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={newObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.name}</span>}\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={newObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.lastName}</span>}\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={newObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.phone}</span>}\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={newObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errors.email}</span>}\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={handleClose}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default AddForm;","import React from 'react';\r\nimport AddForm from '../Add/AddForm';\r\n\r\nfunction Search({search, chengeHandler, handleShow}) {\r\n\r\n    return (\r\n        <div className=\"col-12 row justify-content-around\">\r\n            <div className=\"col-10 col-md-8 col-lg-6 mx-auto row align-items-center justify-content-center bg-info rounded-lg py-2 my-2 ml-5\">\r\n                <input className=\"rounded border-0  col-12 col-sm-8 col-lg-6\" name={'search'} onChange={chengeHandler} value={search} placeholder=\"search contact\" />\r\n                <i className='fa fa-search m-1' style={{color: \"white\"}}/>\r\n            </div>\r\n            <button className=\"btn btn-info my-3\" onClick={handleShow}><i className='fa fa-plus' /></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\n\r\n\r\nfunction EditForm({ contacts, setContacts, show, editObj, setEditObj, handleCloseEdit }) {\r\n\r\n    const [errorsEdit, setErrorsEdit] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n\r\n    });\r\n    const [edit, setEdit] = useState(true);\r\n\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setEditObj({ ...editObj, [name]: value });\r\n\r\n        setEdit(true);\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                if (value.trim().length < 1) {\r\n                    setEdit(false);\r\n                    errorsEdit.name = \"Name must be 1 characters (without space) long!\";\r\n                } else errorsEdit.name = \"\"\r\n                break;\r\n            case \"lastName\":\r\n                if (value.trim().length < 1) {\r\n                    setEdit(false);\r\n                    errorsEdit.lastName = \"Name must be 1 characters (without space) long!\";\r\n                } else errorsEdit.lastName = \"\"\r\n                break;\r\n            case \"phone\":\r\n                if (!validPhoneRegex.test(value)) {\r\n                    setEdit(false);\r\n                    errorsEdit.phone = \"Phone is not valid!\";\r\n                } else errorsEdit.phone = \"\"\r\n                break;\r\n            case \"email\":\r\n                if (!validEmailRegex.test(value)) {\r\n                    setEdit(false);\r\n                    errorsEdit.email = \"Email is not valid!\";\r\n                } else errorsEdit.email = \"\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setEditObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setContacts([...contacts.map((item) => {\r\n            if ((item.id == editObj.id) && (edit == true)) {\r\n                item.name = editObj.name;\r\n                item.lastName = editObj.lastName;\r\n                item.phone = editObj.phone;\r\n                item.email = editObj.email;\r\n                handleClear();\r\n                handleCloseEdit();\r\n                return editObj;\r\n            } else return item;\r\n        })]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleCloseEdit}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={editObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.name}</span>}\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={editObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.lastName}</span>}\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={editObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.phone}</span>}\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={editObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.email}</span>}\r\n\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" onClick={handleCloseEdit}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default EditForm;","import React, { useState } from 'react';\r\nimport EditForm from '../Edit/EditForm'\r\n\r\nfunction Tr({ contacts, setContacts, item }) {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editObj, setEditObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    })\r\n    const handleDelete = (id) => {\r\n        setContacts([...contacts.filter(item => item.id != id)])\r\n    }\r\n\r\n    const handleCloseEdit = () => setShow(false);\r\n\r\n    const handleShowEdit = () => {\r\n        setShow(true);\r\n        handleEdit(item.id);\r\n    };\r\n    const handleEdit = (id) => {\r\n        const trContact = contacts.filter((contact) => contact.id == id);\r\n        setEditObj(trContact[0]);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <tr className=\"tr\">\r\n                <td>{item.id}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>{item.phone}</td>\r\n                <td>{item.email}</td>\r\n                <td>\r\n                    <button onClick={() => handleDelete(item.id)} className=\"btn btn-danger mx-1\"><i className='fa fa-trash' /></button>\r\n                    <button onClick={() => handleShowEdit(item.id)} className=\"btn btn-primary mx-1\"><i className='fa fa-edit' /></button>\r\n                    <EditForm\r\n                        contacts={contacts}\r\n                        setContacts={setContacts}\r\n                        show={show}\r\n                        handleCloseEdit={handleCloseEdit}\r\n                        editObj={editObj}\r\n                        setEditObj={setEditObj}\r\n                        />\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tr;","import React, { useState } from 'react';\r\nimport Search from '../Search/Search'\r\nimport Tr from '../Contacts/Tr';\r\nimport Editform from '../Add/AddForm';\r\nimport '../Table/table.css';\r\nimport AddForm from '../Add/AddForm';\r\n\r\nfunction Table() {\r\n\r\n    const [contacts, setContacts] = useState([\r\n        { id: 1, name: \"ali\", lastName: \"komijani\", phone: \"09014356218\", email: \"ali@gmail.com\", action: \"\" },\r\n        { id: 2, name: \"mohammad\", lastName: \"khorrami\", phone: \"09114356218\", email: \"mohammad@gmail.com\", action: \"\" },\r\n        { id: 3, name: \"reza\", lastName: \"hatami\", phone: \"09124356218\", email: \"reza@gmail.com\", action: \"\" },\r\n        { id: 4, name: \"mahdi\", lastName: \"sadeghi\", phone: \"09134356218\", email: \"sadeghi@gmail.com\", action: \"\" },\r\n        { id: 5, name: \"hasan\", lastName: \"mohammadi\", phone: \"09224356218\", email: \"hasan@gmail.com\", action: \"\" },\r\n        { id: 6, name: \"amir\", lastName: \"sharifi\", phone: \"09354356218\", email: \"sharifi@gmail.com\", action: \"\" },\r\n        { id: 7, name: \"amirali\", lastName: \"ansari\", phone: \"09356356218\", email: \"ansari@gmail.com\", action: \"\" },\r\n        { id: 8, name: \"mehran\", lastName: \"mansoori\", phone: \"09164356218\", email: \"mehran@gmail.com\", action: \"\" },\r\n\r\n    ]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const chengeHandler = (e) => {\r\n        setSearch(e.target.value)\r\n    };\r\n\r\n    let newTr = contacts.filter(item => (\r\n        item.name.toLowerCase().startsWith(search.toLowerCase()) ||\r\n        item.phone.startsWith(search)\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tableContainer \">\r\n                <Search search={search} setSearch={setSearch} chengeHandler={chengeHandler} handleShow={handleShow} />\r\n                <AddForm contacts={contacts} setContacts={setContacts} show={show} handleClose={handleClose} />\r\n                <div className=\"table-content table-responsive\">\r\n                    <table className=\"table col-12 table-striped table-hover border\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>name</th>\r\n                                <th>last name</th>\r\n                                <th>phone</th>\r\n                                <th>email</th>\r\n                                <th>action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {newTr.map((item) => (\r\n                                <Tr key={item.id} item={item} contacts={contacts} setContacts={setContacts} />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './Components/Table/Table';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}